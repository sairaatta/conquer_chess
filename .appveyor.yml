# Build a Windows x64 Release exe with SFML via vcpkg
version: '{build}'
image: Visual Studio 2022

environment:
  VCPKG_ROOT: C:\Tools\vcpkg
  VCPKG_DEFAULT_TRIPLET: x64-windows
  APPVEYOR_SAVE_CACHE_ON_ERROR: true

# Speed up repeat builds by caching vcpkg-installed packages
cache:
  - C:\Tools\vcpkg\installed -> appveyor.yml

install:
  - git clone https://github.com/Microsoft/vcpkg.git C:\Tools\vcpkg
  - cmd: cd C:\Tools\vcpkg && .\bootstrap-vcpkg.bat
  - cmd: C:\Tools\vcpkg\vcpkg.exe install sfml[core,graphics,window,system,network,audio]:x64-windows --triplet x64-windows --classic

build_script:
  - cmd: cmake -B build -S %APPVEYOR_BUILD_FOLDER% -A x64 -DCMAKE_TOOLCHAIN_FILE="C:\Tools\vcpkg\scripts\buildsystems\vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=20
  - cmd: cmake --build build --config Release --target ALL_BUILD

after_build:
  - ps: |
      $root = $env:APPVEYOR_BUILD_FOLDER
      $out  = Join-Path $root 'dist'
      New-Item -ItemType Directory -Force -Path $out | Out-Null

      # Grab the first Release exe produced
      $exe = Get-ChildItem -Recurse -Filter *.exe -Path "$root\build" |
             Where-Object { $_.FullName -match '\\Release\\' } |
             Sort-Object Length -Descending |
             Select-Object -First 1

      if (-not $exe) { throw "No exe found in the Release build." }
      Copy-Item $exe.FullName $out

      # Copy runtime DLLs from vcpkg
      $bin = Join-Path "C:\Tools\vcpkg" 'installed\x64-windows\bin'
      $patterns = @(
        'sfml-*.dll',
        'openal32.dll',
        'freetype*.dll',
        'ogg*.dll',
        'vorbis*.dll',
        'vorbisfile*.dll',
        'vorbisenc*.dll',
        'zlib*.dll',
        'brotli*.dll'
      )
      foreach ($p in $patterns) { 
        Get-ChildItem -Path $bin -Filter $p -ErrorAction SilentlyContinue | 
        Copy-Item -Destination $out -ErrorAction SilentlyContinue 
      }

      # Ship game assets if present
      foreach ($folder in @('resources','images')) {
        $src = Join-Path $root $folder
        if (Test-Path $src) { Copy-Item $src $out -Recurse -Force }
      }

artifacts:
  - path: dist\**
    name: conquer_chess-win64
    type: WebDeployPackage

on_failure:
  - ps: Get-ChildItem -Recurse "$env:APPVEYOR_BUILD_FOLDER\build" -ErrorAction SilentlyContinue | Out-String | Write-Host
